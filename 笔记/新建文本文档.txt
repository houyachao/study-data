项目前后端分离：
		在Controller层  加上@CrossOrigin 是解决前后端请求的问题。
				@RefreshScope  是解决配置文件在gitee 上修改配置信息，代码重新刷新。
	


实现方案：
1.登录系统：为系统提供用户登录凭证以及查询登录用户的信息。主要使用redis+cookie，用户登录凭证 token 使用 UUID，放入cookie，键为token，值为这个UUID。存储在redis 中，键由UUID生成，值为用户信息，过期时间为 120分钟（可配置）。当120分钟内学生没有交卷，则本次试卷无效。
考试系统：提供随机获取题目、提交题目、提交试卷等功能。
随机题目实现：从数据库中获取所有需要考试的题目（经过科目、题目状态等筛选）id的集合（一个Long类型的集合），存入redis中。每个用户登录系统进行考试时，会从redis中获取这个集合，使用随机算法获取指定数量的题目id存入新的list，通过list的contains方法查看判断查询题目是否重复，最后根据题目id集合从数据库中查询对应的题目列表。
学生试卷存储实现：创建学生答题项JavaBean，继承题目POJO，添加属性学生答案，把题目列表list转化成学生答题list 存入redis中。每次获取一道题，前端传入题号，后端从redis中获取题目列表list，然后把对应下标（题号-1）的标准答案置空并即可。提交题目答案，前端向后端传入题号（list下标需要-1），后端从redis中获取题目列表list，然后把对应下标的用户答案进行修改即可。
提交试卷：从redis中获取用户试卷，计算总分数，封装数据库中记录结果，返回总分数。
